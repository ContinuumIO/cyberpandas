# With infos from
# http://tjelvarolsson.com/blog/how-to-continuously-test-your-python-code-on-windows-using-appveyor/
# https://packaging.python.org/en/latest/appveyor/
# https://github.com/rmcgibbo/python-appveyor-conda-example
# https://github.com/pandas-dev/pandas/blob/master/appveyor.yml 

# Backslashes in quotes need to be escaped: \ -> "\\"

matrix:
  fast_finish: true     # immediately finish build once one of the jobs fails.

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script interpreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci\\run_with_env.cmd"
    clone_folder: C:\projects\pandas
    UPLOAD_KEY:
      secure: 7/x6y6mkoFdHwnnE3bYmPj5gkF1KMi69JyfXlOC/Yys1twKZs5UbxmxEAdmJYdDQ

  matrix:

    - CONDA_ROOT: "C:\\Miniconda3_64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "27"
      NUMPY: "1.9"
      IPADDRESS: "ipaddress"

    - CONDA_ROOT: "C:\\Miniconda3_64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      CONDA_PY: "36"
      NUMPY: "1.11"
      IPADDRESS: ""

# We always use a 64-bit machine, but can build x86 distributions
# with the PYTHON_ARCH variable (which is used by CMD_IN_ENV).
platform:
    - x64

# all our python builds have to happen in tests_script...
build: false

install:
  # cancel older builds for the same PR
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }

  # this installs the appropriate Miniconda (Py2/Py3, 32/64 bit)
  # updates conda & installs: conda-build jinja2 anaconda-client
  - powershell .\ci\install.ps1
  - SET PATH=%CONDA_ROOT%;%CONDA_ROOT%\Scripts;%PATH%
  - echo "install"
  - cd
  - ls -ltr
  - git tag --sort v:refname

  # this can conflict with git
  - cmd: rmdir C:\cygwin /s /q

  # install our build environment
  - cmd: conda config --set show_channel_urls true --set always_yes true --set changeps1 false
  - cmd: conda update -q conda
  - cmd: conda config --set ssl_verify false

  # add the pandas channel *before* defaults to have defaults take priority
  - cmd: conda config --add channels conda-forge
  - cmd: conda config --add channels pandas
  - cmd: conda config --remove channels defaults
  - cmd: conda config --add channels defaults

  # this is now the downloaded conda...
  - cmd: conda info -a

  # create our env
  # Needed for building extensions in python2.7 x64 with cmake.
  #  Since python version and arch is not known at this point, install it everywhere.
  - cmd: conda install -q -y conda-build anaconda-client
  - cmd: conda install -q -y -c conda-forge vs2008_express_vc_python_patch
  - cmd: call setup_x64
  - cmd: conda create -q -n test-environment python=%PYTHON_VERSION% coverage cython flake8 hypothesis numba numpy pytest pytest-cov python-dateutil pytz six %IPADDRESS%
  - cmd: activate test-environment
  - cmd: conda list -n test-environment

  - cmd: conda build -q conda-recipes/pandas --python=%PYTHON_VERSION% --numpy=%NUMPY%
  - cmd: dir %CONDA_ROOT%\\conda-bld\\*\\
  - cmd: conda install -q %CONDA_ROOT%\\conda-bld\\*\\pandas*py%CONDA_PY$*.tar.bz2
  - cmd: pip install --no-deps -e .

test_script:
  # tests
  - cmd: pytest
  - cmd: conda build conda-recipes/cyberpandas --python=${PYTHON}

on_success:
  - cmd: if "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" anaconda -t %UPLOAD_KEY% upload -u intake --force %CONDA_ROOT%\\conda-bld\\*\\*.tar.bz2
